{% schema %}
{
  "name": "Customer Addresses",
  "class": "main-addresses-section",
  "settings": [
    {
      "type": "checkbox",
      "id": "enable_default_address",
      "label": "Enable default address selection",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_company_field",
      "label": "Show company field",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_phone_field",
      "label": "Show phone field",
      "default": true
    }
  ]
}
{% endschema %}

<div class="customer addresses mx-auto w-full">
  <div class="main-register py-7">
    <h1 class="mb-6 text-center">Your Addresses</h1>

    <div class="address-list main-form m-auto w-1/2">
      <div class="mb-4">
        {% for address in customer.addresses %}
        <div class="address mb-4">
          {{ address | format_address }}

          <div class="address-actions mt-4 flex gap-2.5">
            <button type="button" data-address-id="{{ address.id }}" class="edit-address rounded bg-black px-4 py-2 text-white">Edit</button>
            <form class="address-delete-form" method="post" action="/account/addresses/{{ address.id }}">
              <input type="hidden" name="_method" value="delete" />
              <button type="submit" class="rounded bg-red-600 px-4 py-2 text-white">Delete</button>
            </form>
          </div>

           <!-- Edit Form (Hidden by default) -->
          <div id="EditAddress_{{ address.id }}" class="edit-address-form" style="display: none;">
            {% form 'customer_address', address %}
              <h3>Edit address</h3>
              
              <div class="mb-4">
                <label for="AddressFirstName_{{ form.id }}">First name</label>
                <input type="text" class="w-full rounded border px-5 py-2 shadow" id="AddressFirstName_{{ form.id }}" name="address[first_name]" value="{{ form.first_name }}">
              </div>
              
              <div class="mb-4">
                <label for="AddressLastName_{{ form.id }}">Last name</label>
                <input type="text" class="w-full rounded border px-5 py-2 shadow" id="AddressLastName_{{ form.id }}" name="address[last_name]" value="{{ form.last_name }}">
              </div>
              
              {% if section.settings.show_company_field %}
                <div class="mb-4">
                  <label for="AddressCompany_{{ form.id }}">Company</label>
                  <input type="text" class="w-full rounded border px-5 py-2 shadow" id="AddressCompany_{{ form.id }}" name="address[company]" value="{{ form.company }}">
                </div>
              {% endif %}
              
              <div class="mb-4">
                <label for="AddressAddress1_{{ form.id }}">Address 1</label>
                <input type="text" class="w-full rounded border px-5 py-2 shadow" id="AddressAddress1_{{ form.id }}" name="address[address1]" value="{{ form.address1 }}">
              </div>
              
              <div class="mb-4">
                <label for="AddressAddress2_{{ form.id }}">Address 2</label>
                <input type="text" class="w-full rounded border px-5 py-2 shadow" id="AddressAddress2_{{ form.id }}" name="address[address2]" value="{{ form.address2 }}">
              </div>
              
              <div class="mb-4">
                <label for="AddressCity_{{ form.id }}">City</label>
                <input type="text" class="w-full rounded border px-5 py-2 shadow" id="AddressCity_{{ form.id }}" name="address[city]" value="{{ form.city }}">
              </div>
              
              <div class="mb-4">
                <label for="AddressCountry_{{ form.id }}">Country/Region</label>
                <select id="AddressCountry_{{ form.id }}" class="w-full rounded border px-5 py-2 shadow" name="address[country]" data-default="{{ form.country }}">{{ country_option_tags }}</select>
              </div>
              
              <div id="AddressProvinceContainer_{{ form.id }}" style="display: none;" class="mb-4">
                <label for="AddressProvince_{{ form.id }}">Province/State</label>
                <select id="AddressProvince_{{ form.id }}" class="w-full rounded border px-5 py-2 shadow" name="address[province]" data-default="{{ form.province }}"></select>
              </div>
              
              <div class="mb-4">
                <label for="AddressZip_{{ form.id }}">ZIP/Postal code</label>
                <input type="text" id="AddressZip_{{ form.id }}" class="w-full rounded border px-5 py-2 shadow" name="address[zip]" value="{{ form.zip }}">
              </div>
              
              {% if section.settings.show_phone_field %}
                <div class="mb-4">
                  <label for="AddressPhone_{{ form.id }}">Phone</label>
                  <input type="tel" class="w-full rounded border px-5 py-2 shadow" id="AddressPhone_{{ form.id }}" name="address[phone]" value="{{ form.phone }}">
                </div>
              {% endif %}
              
              {% if section.settings.enable_default_address %}
                <div class="mb-4">
                  {{ form.set_as_default_checkbox }}
                  <label for="address_default_address_{{ form.id }}">Set as default address</label>
                </div>
              {% endif %}
              
              <div class="flex gap-4">
                <button type="submit" class="edit-address rounded bg-black px-4 py-2 text-white" >Update Address</button>
              <button type="button" class="cancel-edit" data-address-id="{{ address.id }}">Cancel</button>
              </div>
            {% endform %}
          </div>
        </div>
        {% endfor %}
      </div>

      <div class="mb-4">
        <button type="button" class="add-new-address rounded bg-green-500 px-4 py-2 text-white">Add a new address</button>
      </div>

      <div id="AddressForms" style="display: none;">
        <h2 class="mb-6 text-center">Add a new address</h2>
      
     {% form 'customer_address', customer.new_address %}
      <div  class="mb-4">
        <input type="text" id="AddressFirstNameNew" class="w-full rounded border px-5 py-2 shadow" name="address[first_name]" value="{{ form.first_name }}" placeholder="First name" />
      </div>

      <div class="mb-4">
        <input type="text" id="AddressLastNameNew" class="w-full rounded border px-5 py-2 shadow" name="address[last_name]" value="{{ form.last_name }}" placeholder="Last name" />
      </div>

     {% if section.settings.show_company_field %}
      <div class="mb-4">
        <input type="text" id="AddressCompanyNew" class="w-full rounded border px-5 py-2 shadow" name="address[company]" value="{{ form.company }}" placeholder="Company" />
      </div>
       {% endif %}

      <div class="mb-4">
        <input type="text" id="AddressAddress1New" class="w-full rounded border px-5 py-2 shadow" name="address[address1]" value="{{ form.address1 }} " placeholder="Address 1" />
      </div>

      <div class="mb-4">
        <input type="text" id="AddressAddress2New" class="w-full rounded border px-5 py-2 shadow" name="address[address2]" value="{{ form.address2 }}" placeholder="Address 2" />
      </div>

      <div class="mb-4">
        <input type="text" id="AddressCityNew" class="w-full rounded border px-5 py-2 shadow" name="address[city]" value="{{ form.city }}" placeholder="City" />
      </div>

      <div class="mb-4">
         <label for="AddressCountryNew">Country/Region</label>
       <select id="AddressCountryNew" class="w-full rounded border px-5 py-2 shadow" name="address[country]" data-default="{{ form.country }}">{{ country_option_tags }}</select>
      </div>

      <div id="AddressProvinceContainerNew" style="display: none;" class="mb-4">
        <label for="AddressProvinceNew">Province</label>
         <select id="AddressProvinceNew" class="w-full rounded border px-5 py-2 shadow" name="address[province]" data-default="{{ form.province }}"></select>
      </div>

      <div class="mb-4">
        <input type="text" id="AddressZipNew" class="w-full rounded border px-5 py-2 shadow" name="address[zip]" value="{{ form.zip }}" placeholder="ZIP/Postal code" />
      </div>

{% if section.settings.show_phone_field %}
      <div class="mb-4">
        <input type="tel" id="AddressPhoneNew" class="w-full rounded border px-5 py-2 shadow" name="address[phone]" value="{{ form.phone }}" placeholder="Phone" />
      </div>
  {% endif %}

   {% if section.settings.enable_default_address %}
      <div class="mb-4">
        {{ form.set_as_default_checkbox }}
        <label for="address_default_address_new">Set as default address</label>
      </div>
      {% endif %}

      <div class=" mt-4 flex gap-4">
        <button type="submit" class="edit-address rounded bg-black px-4 py-2 text-white">Add Address</button>
        <button type="button" class="cancel-new-address">Cancel</button>
      </div>

       {% endform %}
    </div>
  </div>
</div>
  </div>


<script>
  // Load Shopify country provinces only when needed
  document.addEventListener('DOMContentLoaded', function() {
    // Initialize country selectors for all address forms
    function initCountrySelectors() {
      // Initialize for new address form
      if (document.getElementById('AddressCountryNew') && document.getElementById('AddressProvinceNew')) {
        new Shopify.CountryProvinceSelector('AddressCountryNew', 'AddressProvinceNew', {
          hideElement: 'AddressProvinceContainerNew'
        });
      }
      
      // Initialize for edit address forms
      document.querySelectorAll('[id^="AddressCountry_"]').forEach(countrySelect => {
        const idSuffix = countrySelect.id.replace('AddressCountry_', '');
        const provinceContainer = document.getElementById(`AddressProvinceContainer_${idSuffix}`);
        const provinceSelect = document.getElementById(`AddressProvince_${idSuffix}`);
        
        if (countrySelect && provinceSelect) {
          new Shopify.CountryProvinceSelector(
            `AddressCountry_${idSuffix}`, 
            `AddressProvince_${idSuffix}`, 
            {
              hideElement: `AddressProvinceContainer_${idSuffix}`
            }
          );
          
          // Show provinces if already selected
          if (countrySelect.value && provinceSelect.innerHTML.trim().length > 0) {
            provinceContainer.style.display = 'block';
          }
        }
      });
    }
    
    // Initialize all country selectors
    initCountrySelectors();
    
    // Toggle new address form
    document.querySelector('.add-new-address')?.addEventListener('click', function() {
      document.getElementById('AddressForms').style.display = 'block';
    });
    
    document.querySelector('.cancel-new-address')?.addEventListener('click', function() {
      document.getElementById('AddressForms').style.display = 'none';
    });
    
    // Toggle edit address forms
    document.querySelectorAll('.edit-address').forEach(button => {
      button.addEventListener('click', function() {
        const addressId = this.getAttribute('data-address-id');
        const editForm = document.getElementById(`EditAddress_${addressId}`);
        
        // Hide all other edit forms
        document.querySelectorAll('.edit-address-form').forEach(form => {
          if (form.id !== `EditAddress_${addressId}`) {
            form.style.display = 'none';
          }
        });
        
        // Toggle current edit form
        if (editForm) {
          editForm.style.display = editForm.style.display === 'none' ? 'block' : 'none';
          
          // Reinitialize country selector when form is shown
          if (editForm.style.display === 'block') {
            const countrySelect = editForm.querySelector('[id^="AddressCountry_"]');
            if (countrySelect) {
              const idSuffix = countrySelect.id.replace('AddressCountry_', '');
              const provinceContainer = document.getElementById(`AddressProvinceContainer_${idSuffix}`);
              const provinceSelect = document.getElementById(`AddressProvince_${idSuffix}`);
              
              if (countrySelect && provinceSelect) {
                new Shopify.CountryProvinceSelector(
                  `AddressCountry_${idSuffix}`, 
                  `AddressProvince_${idSuffix}`, 
                  {
                    hideElement: `AddressProvinceContainer_${idSuffix}`
                  }
                );
                
                // Show provinces if already selected
                if (countrySelect.value && provinceSelect.innerHTML.trim().length > 0) {
                  provinceContainer.style.display = 'block';
                }
              }
            }
          }
        }
      });
    });
    
    // Cancel edit buttons
    document.querySelectorAll('.cancel-edit').forEach(button => {
      button.addEventListener('click', function() {
        const addressId = this.getAttribute('data-address-id');
        const editForm = document.getElementById(`EditAddress_${addressId}`);
        if (editForm) {
          editForm.style.display = 'none';
        }
      });
    });
  });
</script>
